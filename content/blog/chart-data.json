{
  "chartDescriptions": {
    "pie": "a circular statistical graphic that divides data into proportional slices to show percentage or proportional data",
    "bar": "a chart that presents categorical data with rectangular bars whose heights or lengths are proportional to the values they represent",
    "line": "a type of chart that displays information as a series of data points connected by straight line segments",
    "scatter": "a type of plot that uses dots to represent values for two different numeric variables",
    "area": "a line chart where the area between the line and axis is filled with color or shading",
    "column": "a chart that uses vertical bars to compare values across categories",
    "donut": "a variation of pie charts with a hollow center, making them easier to read and more modern-looking",
    "heatmap": "a graphical representation of data where values are represented as colors in a matrix format",
    "funnel": "a chart that shows how data moves through a process, typically displaying decreasing values",
    "gauge": "a chart that displays a single value within a range, similar to a speedometer"
  },
  
  "chartUseCases": {
    "pie": "showing proportional data, market share analysis, survey results, budget breakdowns, and categorical distributions",
    "bar": "comparing values across categories, ranking data, showing survey results, and displaying performance metrics",
    "line": "tracking changes over time, showing trends, displaying time series data, and monitoring performance",
    "scatter": "exploring relationships between variables, identifying correlations, outlier detection, and regression analysis",
    "area": "showing cumulative values over time, comparing multiple datasets, and emphasizing magnitude of change",
    "column": "comparing discrete categories, showing rankings, displaying survey data, and presenting grouped data",
    "donut": "displaying proportional data with better readability, modern dashboards, and when you need space for additional information in the center",
    "heatmap": "showing data density, correlation matrices, geographic data, time-based patterns, and large dataset visualization",
    "funnel": "conversion tracking, sales pipelines, user journey analysis, and process optimization",
    "gauge": "KPI dashboards, performance monitoring, goal tracking, and single-value displays"
  },
  
  "chartWhenToUse": {
    "pie": "- Display parts of a whole (percentages)\n- Show data with 3-7 categories for best readability\n- Highlight the largest or smallest segments\n- Present survey results or market share data\n- When exact values are less important than proportions",
    "bar": "- Compare values across different categories\n- Display rankings or ordered data\n- Show positive and negative values\n- Present survey results with multiple options\n- When category names are long (horizontal bars work better)",
    "line": "- Track changes over time periods\n- Show trends and patterns in data\n- Display continuous data\n- Compare multiple time series\n- Forecast future values based on historical trends",
    "scatter": "- Explore relationships between two numeric variables\n- Identify correlations and patterns\n- Detect outliers in your data\n- Perform regression analysis\n- Show distribution of data points",
    "area": "- Show cumulative totals over time\n- Compare multiple datasets with emphasis on magnitude\n- Display stacked data categories\n- Highlight the 'area under the curve'\n- Show how individual categories contribute to the total",
    "column": "- Compare discrete categories vertically\n- Display grouped or clustered data\n- Show data that fits better in vertical format\n- Present time series data with distinct periods\n- When you have space constraints horizontally",
    "donut": "- All the same use cases as pie charts\n- When you want a more modern, clean look\n- Need space in the center for additional information\n- Working with larger datasets (up to 12 categories)\n- Creating dashboard-style visualizations",
    "heatmap": "- Visualize large amounts of data in a compact format\n- Show patterns in time-based data (like website traffic by hour/day)\n- Display correlation between multiple variables\n- Geographic data visualization\n- When color coding adds meaning to your data",
    "funnel": "- Track conversion rates through a process\n- Analyze sales pipelines and stages\n- Monitor user journey through website/app\n- Identify bottlenecks in processes\n- Show progressive reduction in data",
    "gauge": "- Display single KPIs or metrics\n- Show performance against targets\n- Create dashboard indicators\n- Monitor real-time values\n- When you need an intuitive, speedometer-like display"
  },
  
  "chartExamples": {
    "pie": {
      "basic": "sales by product category",
      "detailed": "market share percentages and category labels",
      "advanced": "budget allocation with custom colors",
      "example1": {
        "title": "Sales Distribution by Product",
        "description": "Perfect for showing how different product categories contribute to total sales",
        "prompt": "Create a pie chart showing our sales distribution across product categories"
      },
      "example2": {
        "title": "Survey Results Breakdown",
        "description": "Ideal for displaying survey responses and their relative proportions",
        "prompt": "Make a pie chart of customer satisfaction survey results"
      },
      "example3": {
        "title": "Budget Allocation",
        "description": "Great for visualizing how budgets are allocated across departments",
        "prompt": "Show me a pie chart of our marketing budget breakdown by channel"
      },
      "dataFormat": {
        "column1": "Product A",
        "value1": "45",
        "column2": "Product B", 
        "value2": "30",
        "column3": "Product C",
        "value3": "25"
      }
    },
    "bar": {
      "basic": "revenue by quarter",
      "detailed": "sales performance with target lines",
      "advanced": "multi-series comparison with custom styling",
      "example1": {
        "title": "Quarterly Sales Comparison",
        "description": "Perfect for comparing sales performance across different time periods",
        "prompt": "Create a bar chart comparing our quarterly sales performance"
      },
      "example2": {
        "title": "Regional Performance",
        "description": "Ideal for showing performance differences across regions or territories", 
        "prompt": "Make a bar chart showing sales by region with target indicators"
      },
      "example3": {
        "title": "Product Ranking",
        "description": "Great for displaying ranked data like top-selling products",
        "prompt": "Show me a bar chart of our top 10 selling products this month"
      },
      "dataFormat": {
        "column1": "Q1 2024",
        "value1": "125000",
        "column2": "Q2 2024",
        "value2": "140000", 
        "column3": "Q3 2024",
        "value3": "158000"
      }
    },
    "line": {
      "basic": "website traffic over the last 6 months",
      "detailed": "multiple metrics with trend lines",
      "advanced": "forecasted data with confidence intervals",
      "example1": {
        "title": "Website Traffic Trends",
        "description": "Perfect for tracking how website traffic changes over time",
        "prompt": "Create a line chart showing our website traffic trends over the past year"
      },
      "example2": {
        "title": "Stock Price Movement",
        "description": "Ideal for displaying continuous data changes like stock prices",
        "prompt": "Make a line chart of our stock price movement over the last quarter"
      },
      "example3": {
        "title": "Sales Growth Tracking",
        "description": "Great for monitoring business growth metrics over time",
        "prompt": "Show me a line chart of monthly recurring revenue growth"
      },
      "dataFormat": {
        "column1": "January",
        "value1": "15000",
        "column2": "February", 
        "value2": "18000",
        "column3": "March",
        "value3": "22000"
      }
    }
  },

  "competitorInfo": {
    "tableau": {
      "displayName": "Tableau",
      "cost": "Expensive licensing fees starting at $70/month per user",
      "type": "Desktop"
    },
    "powerbi": {
      "displayName": "Power BI",
      "cost": "Microsoft licensing fees starting at $10/month per user",
      "type": "Desktop/Cloud"
    },
    "looker-studio": {
      "displayName": "Looker Studio",
      "cost": "Free for basic features, enterprise pricing for advanced features",
      "type": "Cloud"
    }
  },

  "competitorSteps": {
    "tableau": {
      "pie-chart": "1. Drag your categorical dimension to the 'Color' shelf\n2. Drag your measure to the 'Angle' shelf\n3. Go to 'Show Me' panel and select the pie chart option\n4. Adjust the mark type to 'Pie' if not automatically set\n5. Right-click on the pie chart and select 'Format'\n6. Configure labels, colors, and sizing manually\n7. Add percentage calculations using calculated fields",
      "donut-chart": "1. Create a pie chart following the standard steps\n2. Create a calculated field for the inner circle (constant value)\n3. Drag this calculated field to the 'Rows' shelf\n4. Set the mark type to 'Circle' for the inner chart\n5. Adjust sizing and positioning manually\n6. Overlay the pie chart on top of the circle\n7. Fine-tune alignment and spacing\n8. Configure dual-axis settings for proper display",
      "stacked-bar-chart": "1. Drag your categorical dimension to the 'Rows' shelf\n2. Drag your primary measure to the 'Columns' shelf\n3. Drag your secondary dimension to the 'Color' shelf\n4. Ensure the mark type is set to 'Bar'\n5. Right-click on the measure axis and select 'Edit Axis'\n6. Configure stacking options in the 'Analysis' menu\n7. Manually adjust colors and labels for each segment\n8. Add data labels using the 'Label' shelf",
      "heat-map": "1. Drag your first dimension to 'Columns'\n2. Drag your second dimension to 'Rows'\n3. Drag your measure to both 'Color' and 'Size' shelves\n4. Change mark type to 'Square' or 'Circle'\n5. Configure the color palette manually\n6. Adjust the size range for proper scaling\n7. Set up proper legends and labels\n8. Fine-tune grid lines and borders\n9. Configure tooltips for data values",
      "scatter-plot": "1. Drag your first measure to the 'Columns' shelf\n2. Drag your second measure to the 'Rows' shelf\n3. Set mark type to 'Circle'\n4. Optionally drag a dimension to 'Color' for grouping\n5. Drag a measure to 'Size' if you want bubble chart effect\n6. Add trend lines through the 'Analytics' pane\n7. Configure axis ranges and scaling\n8. Set up proper labels and formatting\n9. Add reference lines or bands if needed"
    },
    "powerbi": {
      "pie-chart": "1. Click on the Pie Chart visualization in the Visualizations pane\n2. Drag your category field to the 'Legend' field well\n3. Drag your measure to the 'Values' field well\n4. Configure data labels through the Format pane\n5. Adjust colors using the Data Colors section\n6. Set up tooltips and conditional formatting\n7. Apply filters and slicers as needed",
      "donut-chart": "1. Select the Donut Chart visualization from the Visualizations pane\n2. Add your categorical field to the 'Legend' well\n3. Add your measure to the 'Values' well\n4. Configure the inner radius through Format options\n5. Customize colors and data labels\n6. Set up drill-through actions if needed\n7. Apply formatting for professional appearance",
      "stacked-bar-chart": "1. Choose the Stacked Bar Chart from Visualizations\n2. Drag your primary category to the 'Axis' field\n3. Add your measure to the 'Values' field\n4. Drag your secondary category to the 'Legend' field\n5. Format data labels and colors through the Format pane\n6. Configure axis properties and scaling\n7. Add conditional formatting rules\n8. Set up interactions with other visuals",
      "heat-map": "1. Import a custom heatmap visual from AppSource\n2. Configure row and column categories\n3. Add your measure to the Values field\n4. Set up color saturation rules\n5. Configure tooltips and labels\n6. Adjust grid appearance and spacing\n7. Apply filters and cross-filtering\n8. Format legends and axes",
      "scatter-plot": "1. Select Scatter Chart from the Visualizations pane\n2. Add your X-axis measure to the 'X Axis' field\n3. Add your Y-axis measure to the 'Y Axis' field\n4. Optionally add a category to the 'Legend' field\n5. Add a measure to 'Size' for bubble chart effect\n6. Configure play axis for animated charts\n7. Format markers, colors, and data labels\n8. Add trend lines through Analytics pane"
    },
    "looker-studio": {
      "pie-chart": "1. Click 'Add a Chart' and select Pie Chart\n2. Choose your data source from the dropdown\n3. Drag your dimension to the 'Dimension' field\n4. Drag your metric to the 'Metric' field\n5. Configure slice sorting and filtering\n6. Customize colors through the Style tab\n7. Set up data labels and legend positioning\n8. Apply conditional formatting rules",
      "donut-chart": "1. Add a Pie Chart to your report\n2. Configure dimension and metric fields\n3. Go to the Style tab and enable 'Donut chart'\n4. Adjust the donut hole size\n5. Configure slice colors and data labels\n6. Set up hover tooltips\n7. Apply filters and date range controls\n8. Format legend and chart title",
      "stacked-bar-chart": "1. Select 'Add a Chart' and choose Stacked Bar Chart\n2. Connect to your data source\n3. Set your primary dimension for the bars\n4. Add your metric to the Metric field\n5. Add a secondary dimension for stacking\n6. Configure bar orientation (horizontal/vertical)\n7. Format colors and data labels\n8. Set up interactive filters",
      "heat-map": "1. Add a Heatmap chart (may require community visualization)\n2. Configure row and column dimensions\n3. Set your metric for color intensity\n4. Choose an appropriate color scale\n5. Configure cell labels and tooltips\n6. Set up dimension filtering\n7. Format grid lines and spacing\n8. Apply conditional color rules",
      "scatter-plot": "1. Click 'Add a Chart' and select Scatter Chart\n2. Choose your data source\n3. Set X-axis metric in the X field\n4. Set Y-axis metric in the Y field\n5. Optionally add a dimension for color coding\n6. Configure bubble size with a metric\n7. Format axis ranges and labels\n8. Add trend lines through chart settings"
    }
  },

  "competitorComplexity": {
    "tableau": {
      "pie-chart": "While pie charts might seem simple, Tableau's implementation requires understanding of shelf hierarchy, mark properties, and manual color configuration. Users often struggle with label positioning, percentage calculations, and creating visually appealing color schemes. The process becomes even more complex when dealing with small slices or when you need to sort categories by value.",
      "donut-chart": "Donut charts in Tableau are notoriously difficult to create, requiring workarounds with dual-axis charts, calculated fields for inner circles, and precise alignment techniques. Most users need to follow complex tutorials involving multiple chart overlays, manual positioning, and custom sizing - a process that can take hours to master.",
      "stacked-bar-chart": "Creating stacked bar charts requires careful attention to dimension hierarchy, proper aggregation settings, and manual color coding for each segment. Users frequently encounter issues with data ordering, label placement, and ensuring consistent color schemes across different chart views. The complexity increases significantly when trying to add percentage labels or create horizontal stacked bars.",
      "heat-map": "Heat maps in Tableau require understanding of continuous vs. discrete field types, color palette customization, and proper scaling of both color and size elements. Users often struggle with creating meaningful color gradients, handling missing data points, and configuring appropriate grid layouts. The process becomes complex when dealing with large datasets or when trying to create custom color ranges.",
      "scatter-plot": "While basic scatter plots are straightforward, creating meaningful visualizations requires understanding of trend lines, reference bands, clustering analysis, and proper axis configuration. Users frequently struggle with overlapping points, appropriate scaling, color coding for categories, and adding statistical elements like correlation coefficients or regression lines."
    },
    "powerbi": {
      "pie-chart": "Power BI pie charts require navigating between multiple panes (Visualizations, Fields, Format) and understanding field well hierarchies. Users often struggle with data aggregation settings, custom color schemes, and proper label positioning. The complexity increases when dealing with measures that need specific aggregation functions or when trying to create calculated fields for percentages.",
      "donut-chart": "Creating effective donut charts in Power BI involves understanding visualization properties, configuring inner radius settings, and managing data label overlap. Users frequently encounter issues with color consistency across different chart instances, tooltip customization, and ensuring proper drill-through functionality when integrated with other report elements.",
      "stacked-bar-chart": "Stacked bar charts in Power BI require careful field mapping, understanding of legend hierarchies, and proper axis configuration. Users often struggle with category ordering, color management across multiple data series, conditional formatting rules, and ensuring proper interaction with slicers and filters. The complexity grows significantly when implementing custom calculations or percentage stacking.",
      "heat-map": "Heat maps in Power BI often require custom visuals from AppSource, adding complexity to report deployment and sharing. Users struggle with configuring color scales, managing data density, handling missing values, and ensuring proper tooltip information. The process becomes even more complex when trying to implement custom color ranges or when integrating with other interactive elements.",
      "scatter-plot": "Power BI scatter plots require understanding of multiple field wells (X Axis, Y Axis, Legend, Size, Play Axis) and their interactions. Users frequently struggle with axis scaling, bubble sizing algorithms, animated chart configurations, and trend line customization. The complexity increases when implementing drill-through actions or when trying to create custom tooltips with multiple data points."
    },
    "looker-studio": {
      "pie-chart": "Looker Studio pie charts require understanding of dimension vs. metric field types, data source connections, and the relationship between different chart properties. Users often struggle with data filtering, custom color palettes, slice sorting, and ensuring charts update properly when connected to dynamic data sources. The process becomes complex when implementing calculated fields or custom aggregations.",
      "donut-chart": "Creating donut charts in Looker Studio involves configuring pie chart properties and enabling donut mode, which isn't immediately obvious to new users. Users frequently encounter issues with hole size optimization, data label positioning around the circular layout, and maintaining visual consistency across different screen sizes and devices.",
      "stacked-bar-chart": "Stacked bar charts in Looker Studio require proper understanding of dimension hierarchies, metric calculations, and the interaction between different chart elements. Users often struggle with stack ordering, color assignment consistency, tooltip configuration, and ensuring proper responsiveness across different report formats and sharing methods.",
      "heat-map": "Heat maps in Looker Studio may require community visualizations or workarounds, making them less straightforward than basic chart types. Users struggle with color scale configuration, handling sparse data, grid formatting, and ensuring proper drill-down functionality. The complexity increases when trying to implement custom color rules or when dealing with large datasets that require aggregation.",
      "scatter-plot": "Looker Studio scatter plots require careful configuration of axis metrics, optional grouping dimensions, and bubble sizing parameters. Users frequently encounter issues with axis range optimization, point overlap when dealing with dense data, trend line configuration, and ensuring proper interactivity with other report elements and filters."
    }
  }
}