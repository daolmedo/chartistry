{
  "chartDescriptions": {
    "pie": "a circular statistical graphic that divides data into proportional slices to show percentage or proportional data",
    "bar": "a chart that presents categorical data with rectangular bars whose heights or lengths are proportional to the values they represent",
    "line": "a type of chart that displays information as a series of data points connected by straight line segments",
    "scatter": "a type of plot that uses dots to represent values for two different numeric variables",
    "area": "a line chart where the area between the line and axis is filled with color or shading",
    "column": "a chart that uses vertical bars to compare values across categories",
    "donut": "a variation of pie charts with a hollow center, making them easier to read and more modern-looking",
    "heatmap": "a graphical representation of data where values are represented as colors in a matrix format",
    "funnel": "a chart that shows how data moves through a process, typically displaying decreasing values",
    "gauge": "a chart that displays a single value within a range, similar to a speedometer",
    "histogram": "a graphical representation that shows the distribution of numerical data by organizing data into bins or intervals"
  },
  
  "chartUseCases": {
    "pie": "showing proportional data, market share analysis, survey results, budget breakdowns, and categorical distributions",
    "bar": "comparing values across categories, ranking data, showing survey results, and displaying performance metrics",
    "line": "tracking changes over time, showing trends, displaying time series data, and monitoring performance",
    "scatter": "exploring relationships between variables, identifying correlations, outlier detection, and regression analysis",
    "area": "showing cumulative values over time, comparing multiple datasets, and emphasizing magnitude of change",
    "column": "comparing discrete categories, showing rankings, displaying survey data, and presenting grouped data",
    "donut": "displaying proportional data with better readability, modern dashboards, and when you need space for additional information in the center",
    "heatmap": "showing data density, correlation matrices, geographic data, time-based patterns, and large dataset visualization",
    "funnel": "conversion tracking, sales pipelines, user journey analysis, and process optimization",
    "gauge": "KPI dashboards, performance monitoring, goal tracking, and single-value displays",
    "histogram": "data distribution analysis, quality control, statistical analysis, frequency analysis, and understanding data patterns"
  },
  
  "chartWhenToUse": {
    "pie": "- Display parts of a whole (percentages)\n- Show data with 3-7 categories for best readability\n- Highlight the largest or smallest segments\n- Present survey results or market share data\n- When exact values are less important than proportions",
    "bar": "- Compare values across different categories\n- Display rankings or ordered data\n- Show positive and negative values\n- Present survey results with multiple options\n- When category names are long (horizontal bars work better)",
    "line": "- Track changes over time periods\n- Show trends and patterns in data\n- Display continuous data\n- Compare multiple time series\n- Forecast future values based on historical trends",
    "scatter": "- Explore relationships between two numeric variables\n- Identify correlations and patterns\n- Detect outliers in your data\n- Perform regression analysis\n- Show distribution of data points",
    "area": "- Show cumulative totals over time\n- Compare multiple datasets with emphasis on magnitude\n- Display stacked data categories\n- Highlight the 'area under the curve'\n- Show how individual categories contribute to the total",
    "column": "- Compare discrete categories vertically\n- Display grouped or clustered data\n- Show data that fits better in vertical format\n- Present time series data with distinct periods\n- When you have space constraints horizontally",
    "donut": "- All the same use cases as pie charts\n- When you want a more modern, clean look\n- Need space in the center for additional information\n- Working with larger datasets (up to 12 categories)\n- Creating dashboard-style visualizations",
    "heatmap": "- Visualize large amounts of data in a compact format\n- Show patterns in time-based data (like website traffic by hour/day)\n- Display correlation between multiple variables\n- Geographic data visualization\n- When color coding adds meaning to your data",
    "funnel": "- Track conversion rates through a process\n- Analyze sales pipelines and stages\n- Monitor user journey through website/app\n- Identify bottlenecks in processes\n- Show progressive reduction in data",
    "gauge": "- Display single KPIs or metrics\n- Show performance against targets\n- Create dashboard indicators\n- Monitor real-time values\n- When you need an intuitive, speedometer-like display",
    "histogram": "- Analyze the distribution of numerical data\n- Identify patterns like normal distribution, skewness, or outliers\n- Quality control and process improvement\n- Statistical analysis and research\n- Understanding frequency of values in datasets\n- When you need to see data density across ranges"
  },
  
  "chartExamples": {
    "pie": {
      "basic": "sales by product category",
      "detailed": "market share percentages and category labels",
      "advanced": "budget allocation with custom colors",
      "example1": {
        "title": "Sales Distribution by Product",
        "description": "Perfect for showing how different product categories contribute to total sales",
        "prompt": "Create a pie chart showing our sales distribution across product categories"
      },
      "example2": {
        "title": "Survey Results Breakdown",
        "description": "Ideal for displaying survey responses and their relative proportions",
        "prompt": "Make a pie chart of customer satisfaction survey results"
      },
      "example3": {
        "title": "Budget Allocation",
        "description": "Great for visualizing how budgets are allocated across departments",
        "prompt": "Show me a pie chart of our marketing budget breakdown by channel"
      },
      "dataFormat": {
        "column1": "Product A",
        "value1": "45",
        "column2": "Product B", 
        "value2": "30",
        "column3": "Product C",
        "value3": "25"
      }
    },
    "bar": {
      "basic": "revenue by quarter",
      "detailed": "sales performance with target lines",
      "advanced": "multi-series comparison with custom styling",
      "example1": {
        "title": "Quarterly Sales Comparison",
        "description": "Perfect for comparing sales performance across different time periods",
        "prompt": "Create a bar chart comparing our quarterly sales performance"
      },
      "example2": {
        "title": "Regional Performance",
        "description": "Ideal for showing performance differences across regions or territories", 
        "prompt": "Make a bar chart showing sales by region with target indicators"
      },
      "example3": {
        "title": "Product Ranking",
        "description": "Great for displaying ranked data like top-selling products",
        "prompt": "Show me a bar chart of our top 10 selling products this month"
      },
      "dataFormat": {
        "column1": "Q1 2024",
        "value1": "125000",
        "column2": "Q2 2024",
        "value2": "140000", 
        "column3": "Q3 2024",
        "value3": "158000"
      }
    },
    "line": {
      "basic": "website traffic over the last 6 months",
      "detailed": "multiple metrics with trend lines",
      "advanced": "forecasted data with confidence intervals",
      "example1": {
        "title": "Website Traffic Trends",
        "description": "Perfect for tracking how website traffic changes over time",
        "prompt": "Create a line chart showing our website traffic trends over the past year"
      },
      "example2": {
        "title": "Stock Price Movement",
        "description": "Ideal for displaying continuous data changes like stock prices",
        "prompt": "Make a line chart of our stock price movement over the last quarter"
      },
      "example3": {
        "title": "Sales Growth Tracking",
        "description": "Great for monitoring business growth metrics over time",
        "prompt": "Show me a line chart of monthly recurring revenue growth"
      },
      "dataFormat": {
        "column1": "January",
        "value1": "15000",
        "column2": "February", 
        "value2": "18000",
        "column3": "March",
        "value3": "22000"
      }
    },
    "histogram": {
      "basic": "distribution of customer ages",
      "detailed": "sales performance frequency with statistical indicators",
      "advanced": "quality control measurements with normal distribution overlay",
      "example1": {
        "title": "Customer Age Distribution",
        "description": "Perfect for understanding the age demographics of your customer base",
        "prompt": "Create a histogram showing the distribution of customer ages"
      },
      "example2": {
        "title": "Response Time Analysis",
        "description": "Ideal for analyzing system performance and identifying bottlenecks",
        "prompt": "Make a histogram of website response times to identify performance patterns"
      },
      "example3": {
        "title": "Sales Amount Frequency",
        "description": "Great for understanding the distribution of transaction values",
        "prompt": "Show me a histogram of sales amounts to see our typical transaction sizes"
      },
      "dataFormat": {
        "column1": "Value Range",
        "value1": "Frequency",
        "column2": "0-100",
        "value2": "25",
        "column3": "101-200",
        "value3": "45"
      }
    }
  },

  "competitorInfo": {
    "tableau": {
      "displayName": "Tableau",
      "cost": "Expensive licensing fees starting at $70/month per user",
      "type": "Desktop"
    },
    "powerbi": {
      "displayName": "Power BI",
      "cost": "Microsoft licensing fees starting at $10/month per user",
      "type": "Desktop/Cloud"
    },
    "looker-studio": {
      "displayName": "Looker Studio",
      "cost": "Free for basic features, enterprise pricing for advanced features",
      "type": "Cloud"
    },
    "excel": {
      "displayName": "Microsoft Excel",
      "cost": "Microsoft Office subscription starting at $6/month per user or $150 one-time purchase",
      "type": "Desktop/Web"
    }
  },

  "competitorSteps": {
    "tableau": {
      "pie-chart": "1. Drag your categorical dimension to the 'Color' shelf\n2. Drag your measure to the 'Angle' shelf\n3. Go to 'Show Me' panel and select the pie chart option\n4. Adjust the mark type to 'Pie' if not automatically set\n5. Right-click on the pie chart and select 'Format'\n6. Configure labels, colors, and sizing manually\n7. Add percentage calculations using calculated fields",
      "donut-chart": "1. Create a pie chart following the standard steps\n2. Create a calculated field for the inner circle (constant value)\n3. Drag this calculated field to the 'Rows' shelf\n4. Set the mark type to 'Circle' for the inner chart\n5. Adjust sizing and positioning manually\n6. Overlay the pie chart on top of the circle\n7. Fine-tune alignment and spacing\n8. Configure dual-axis settings for proper display",
      "stacked-bar-chart": "1. Drag your categorical dimension to the 'Rows' shelf\n2. Drag your primary measure to the 'Columns' shelf\n3. Drag your secondary dimension to the 'Color' shelf\n4. Ensure the mark type is set to 'Bar'\n5. Right-click on the measure axis and select 'Edit Axis'\n6. Configure stacking options in the 'Analysis' menu\n7. Manually adjust colors and labels for each segment\n8. Add data labels using the 'Label' shelf",
      "heat-map": "1. Drag your first dimension to 'Columns'\n2. Drag your second dimension to 'Rows'\n3. Drag your measure to both 'Color' and 'Size' shelves\n4. Change mark type to 'Square' or 'Circle'\n5. Configure the color palette manually\n6. Adjust the size range for proper scaling\n7. Set up proper legends and labels\n8. Fine-tune grid lines and borders\n9. Configure tooltips for data values",
      "scatter-plot": "1. Drag your first measure to the 'Columns' shelf\n2. Drag your second measure to the 'Rows' shelf\n3. Set mark type to 'Circle'\n4. Optionally drag a dimension to 'Color' for grouping\n5. Drag a measure to 'Size' if you want bubble chart effect\n6. Add trend lines through the 'Analytics' pane\n7. Configure axis ranges and scaling\n8. Set up proper labels and formatting\n9. Add reference lines or bands if needed",
      "line-chart": "1. Drag your date/time dimension to the 'Columns' shelf\n2. Drag your measure to the 'Rows' shelf\n3. Ensure the mark type is set to 'Line'\n4. Right-click on the date field and select appropriate date part\n5. Add multiple measures to create multi-line charts\n6. Configure line colors and styles through the 'Color' shelf\n7. Add markers or data points using dual-axis if needed\n8. Configure axis formatting and scaling\n9. Add trend lines or reference lines through Analytics pane",
      "histogram-chart": "1. Drag your continuous measure to the 'Columns' shelf\n2. Right-click on the measure and select 'Create Bins'\n3. Configure bin size and range in the Create Bins dialog\n4. Drag the newly created bin field to the 'Rows' shelf\n5. Change mark type to 'Bar' for traditional histogram appearance\n6. Add COUNT() measure to create frequency counts\n7. Format axis labels and bin ranges\n8. Configure bar spacing and colors\n9. Add statistical reference lines or normal distribution curves through Analytics"
    },
    "powerbi": {
      "pie-chart": "1. Click on the Pie Chart visualization in the Visualizations pane\n2. Drag your category field to the 'Legend' field well\n3. Drag your measure to the 'Values' field well\n4. Configure data labels through the Format pane\n5. Adjust colors using the Data Colors section\n6. Set up tooltips and conditional formatting\n7. Apply filters and slicers as needed",
      "donut-chart": "1. Select the Donut Chart visualization from the Visualizations pane\n2. Add your categorical field to the 'Legend' well\n3. Add your measure to the 'Values' well\n4. Configure the inner radius through Format options\n5. Customize colors and data labels\n6. Set up drill-through actions if needed\n7. Apply formatting for professional appearance",
      "stacked-bar-chart": "1. Choose the Stacked Bar Chart from Visualizations\n2. Drag your primary category to the 'Axis' field\n3. Add your measure to the 'Values' field\n4. Drag your secondary category to the 'Legend' field\n5. Format data labels and colors through the Format pane\n6. Configure axis properties and scaling\n7. Add conditional formatting rules\n8. Set up interactions with other visuals",
      "heat-map": "1. Import a custom heatmap visual from AppSource\n2. Configure row and column categories\n3. Add your measure to the Values field\n4. Set up color saturation rules\n5. Configure tooltips and labels\n6. Adjust grid appearance and spacing\n7. Apply filters and cross-filtering\n8. Format legends and axes",
      "scatter-plot": "1. Select Scatter Chart from the Visualizations pane\n2. Add your X-axis measure to the 'X Axis' field\n3. Add your Y-axis measure to the 'Y Axis' field\n4. Optionally add a category to the 'Legend' field\n5. Add a measure to 'Size' for bubble chart effect\n6. Configure play axis for animated charts\n7. Format markers, colors, and data labels\n8. Add trend lines through Analytics pane",
      "line-chart": "1. Choose the Line Chart visualization from the Visualizations pane\n2. Drag your date/time field to the 'Axis' field well\n3. Add your measure to the 'Values' field well\n4. Configure the line style and markers through Format pane\n5. Add multiple measures for multi-line charts\n6. Set up legend and data labels\n7. Configure axis properties and scaling\n8. Apply conditional formatting and tooltips\n9. Add analytics features like trend lines or forecasting",
      "histogram-chart": "1. Import a Histogram custom visual from AppSource (or use Column Chart as workaround)\n2. Add your continuous numeric field to the 'Values' field well\n3. Configure bin settings and ranges in the visual properties\n4. Format the X-axis to show proper bin ranges\n5. Set up frequency counts on the Y-axis\n6. Customize bar colors and spacing through Format pane\n7. Configure tooltips to show bin ranges and frequencies\n8. Apply conditional formatting for better visual distinction\n9. Add statistical reference lines if supported by the custom visual"
    },
    "looker-studio": {
      "pie-chart": "1. Click 'Add a Chart' and select Pie Chart\n2. Choose your data source from the dropdown\n3. Drag your dimension to the 'Dimension' field\n4. Drag your metric to the 'Metric' field\n5. Configure slice sorting and filtering\n6. Customize colors through the Style tab\n7. Set up data labels and legend positioning\n8. Apply conditional formatting rules",
      "donut-chart": "1. Add a Pie Chart to your report\n2. Configure dimension and metric fields\n3. Go to the Style tab and enable 'Donut chart'\n4. Adjust the donut hole size\n5. Configure slice colors and data labels\n6. Set up hover tooltips\n7. Apply filters and date range controls\n8. Format legend and chart title",
      "stacked-bar-chart": "1. Select 'Add a Chart' and choose Stacked Bar Chart\n2. Connect to your data source\n3. Set your primary dimension for the bars\n4. Add your metric to the Metric field\n5. Add a secondary dimension for stacking\n6. Configure bar orientation (horizontal/vertical)\n7. Format colors and data labels\n8. Set up interactive filters",
      "heat-map": "1. Add a Heatmap chart (may require community visualization)\n2. Configure row and column dimensions\n3. Set your metric for color intensity\n4. Choose an appropriate color scale\n5. Configure cell labels and tooltips\n6. Set up dimension filtering\n7. Format grid lines and spacing\n8. Apply conditional color rules",
      "scatter-plot": "1. Click 'Add a Chart' and select Scatter Chart\n2. Choose your data source\n3. Set X-axis metric in the X field\n4. Set Y-axis metric in the Y field\n5. Optionally add a dimension for color coding\n6. Configure bubble size with a metric\n7. Format axis ranges and labels\n8. Add trend lines through chart settings",
      "line-chart": "1. Click 'Add a Chart' and select Line Chart\n2. Connect to your data source\n3. Set your date/time dimension for the X-axis\n4. Add your metric to the Metric field\n5. Configure multiple lines by adding dimensions\n6. Format line colors and styles through Style tab\n7. Set up data labels and markers\n8. Configure axis formatting and scaling\n9. Apply date range controls and filters",
      "histogram-chart": "1. Add a Column Chart (no native histogram available)\n2. Pre-process your data to create binned ranges\n3. Use the binned field as your dimension\n4. Add frequency count as your metric\n5. Configure column spacing to eliminate gaps\n6. Format X-axis to show bin ranges properly\n7. Set up appropriate colors and styling\n8. Configure tooltips to show bin information\n9. Apply filters and controls for interactivity"
    },
    "excel": {
      "pie-chart": "1. Select your data range including headers\n2. Go to Insert tab → Charts → Pie Chart\n3. Choose the pie chart style you want\n4. Click on the chart to select it\n5. Use Chart Tools → Design tab to change colors and styles\n6. Add data labels by right-clicking chart → Add Data Labels\n7. Format data labels to show percentages if needed\n8. Adjust legend positioning and formatting",
      "donut-chart": "1. Create a pie chart following the basic steps\n2. Right-click on the pie chart and select 'Format Data Series'\n3. In the Format Data Series pane, adjust the 'Doughnut Hole Size'\n4. Set the hole size to 50-75% for a proper donut appearance\n5. Format colors and data labels as needed\n6. Consider adding a text box in the center for key metrics\n7. Adjust chart title and legend positioning",
      "stacked-bar-chart": "1. Arrange your data with categories in the first column and series in subsequent columns\n2. Select the entire data range including headers\n3. Insert → Charts → Bar Chart → Stacked Bar\n4. Use Chart Tools to modify colors and formatting\n5. Add data labels if needed through Chart Elements\n6. Adjust axis formatting and scaling\n7. Format legend and chart title\n8. Consider switching to 100% stacked for proportional view",
      "heat-map": "1. Organize your data in a matrix format (rows and columns)\n2. Select your data range\n3. Go to Home tab → Conditional Formatting → Color Scales\n4. Choose a color scale that represents your data well\n5. Alternatively, use Insert → Charts → Surface Chart for 3D heatmap\n6. Format the chart by removing gridlines and adjusting colors\n7. Add a color legend manually if needed\n8. Consider using pivot tables for complex data arrangements",
      "scatter-plot": "1. Arrange data with X values in first column, Y values in second\n2. Select both columns of data\n3. Insert → Charts → Scatter → Scatter with markers only\n4. Add more data series by right-clicking chart → Select Data\n5. Format individual data series with different colors/markers\n6. Add trendlines by right-clicking data points → Add Trendline\n7. Format axes, titles, and gridlines as needed\n8. Use Chart Elements to add axis titles and data labels",
      "line-chart": "1. Organize data with dates/categories in first column, values in subsequent columns\n2. Select your data range including headers\n3. Insert → Charts → Line Chart → Line with Markers\n4. Format the chart using Chart Tools Design and Format tabs\n5. Add multiple data series by selecting additional columns\n6. Format each line with different colors and styles\n7. Add data labels, axis titles, and legend as needed\n8. Configure axis scaling and number formatting",
      "histogram-chart": "1. First create bins using Data → Data Analysis → Histogram (requires Analysis ToolPak)\n2. If Analysis ToolPak isn't available, manually create bins and use FREQUENCY function\n3. Set up bin ranges in one column and use FREQUENCY to count occurrences\n4. Create a column chart from the frequency data\n5. Format the chart to remove gaps between bars (set Gap Width to 0%)\n6. Add proper axis labels showing bin ranges\n7. Format chart title and remove legend if not needed\n8. Consider adding normal distribution curve using scatter chart overlay"
    }
  },

  "competitorComplexity": {
    "tableau": {
      "pie-chart": "While pie charts might seem simple, Tableau's implementation requires understanding of shelf hierarchy, mark properties, and manual color configuration. Users often struggle with label positioning, percentage calculations, and creating visually appealing color schemes. The process becomes even more complex when dealing with small slices or when you need to sort categories by value.",
      "donut-chart": "Donut charts in Tableau are notoriously difficult to create, requiring workarounds with dual-axis charts, calculated fields for inner circles, and precise alignment techniques. Most users need to follow complex tutorials involving multiple chart overlays, manual positioning, and custom sizing - a process that can take hours to master.",
      "stacked-bar-chart": "Creating stacked bar charts requires careful attention to dimension hierarchy, proper aggregation settings, and manual color coding for each segment. Users frequently encounter issues with data ordering, label placement, and ensuring consistent color schemes across different chart views. The complexity increases significantly when trying to add percentage labels or create horizontal stacked bars.",
      "heat-map": "Heat maps in Tableau require understanding of continuous vs. discrete field types, color palette customization, and proper scaling of both color and size elements. Users often struggle with creating meaningful color gradients, handling missing data points, and configuring appropriate grid layouts. The process becomes complex when dealing with large datasets or when trying to create custom color ranges.",
      "scatter-plot": "While basic scatter plots are straightforward, creating meaningful visualizations requires understanding of trend lines, reference bands, clustering analysis, and proper axis configuration. Users frequently struggle with overlapping points, appropriate scaling, color coding for categories, and adding statistical elements like correlation coefficients or regression lines.",
      "line-chart": "Although line charts appear simple, Tableau's implementation requires careful attention to date field formatting, continuous vs. discrete configurations, and mark type settings. Users often struggle with date aggregation levels, multiple measure comparisons, null value handling, and creating smooth vs. step line variations. The complexity increases when adding forecasting, reference lines, or when dealing with irregular time intervals.",
      "histogram-chart": "Histograms in Tableau require understanding of bin creation, continuous field types, and proper aggregation methods. Users frequently struggle with determining appropriate bin sizes, handling outliers, configuring frequency calculations, and creating meaningful axis labels. The process becomes complex when trying to overlay normal distribution curves, handle missing values, or when working with non-uniform data distributions that require custom binning strategies."
    },
    "powerbi": {
      "pie-chart": "Power BI pie charts require navigating between multiple panes (Visualizations, Fields, Format) and understanding field well hierarchies. Users often struggle with data aggregation settings, custom color schemes, and proper label positioning. The complexity increases when dealing with measures that need specific aggregation functions or when trying to create calculated fields for percentages.",
      "donut-chart": "Creating effective donut charts in Power BI involves understanding visualization properties, configuring inner radius settings, and managing data label overlap. Users frequently encounter issues with color consistency across different chart instances, tooltip customization, and ensuring proper drill-through functionality when integrated with other report elements.",
      "stacked-bar-chart": "Stacked bar charts in Power BI require careful field mapping, understanding of legend hierarchies, and proper axis configuration. Users often struggle with category ordering, color management across multiple data series, conditional formatting rules, and ensuring proper interaction with slicers and filters. The complexity grows significantly when implementing custom calculations or percentage stacking.",
      "heat-map": "Heat maps in Power BI often require custom visuals from AppSource, adding complexity to report deployment and sharing. Users struggle with configuring color scales, managing data density, handling missing values, and ensuring proper tooltip information. The process becomes even more complex when trying to implement custom color ranges or when integrating with other interactive elements.",
      "scatter-plot": "Power BI scatter plots require understanding of multiple field wells (X Axis, Y Axis, Legend, Size, Play Axis) and their interactions. Users frequently struggle with axis scaling, bubble sizing algorithms, animated chart configurations, and trend line customization. The complexity increases when implementing drill-through actions or when trying to create custom tooltips with multiple data points.",
      "line-chart": "Power BI line charts seem straightforward but require understanding of date hierarchies, measure aggregation, and axis configuration. Users often struggle with date formatting, handling missing data points, multi-line comparisons, and forecasting features. The complexity grows when implementing conditional formatting, custom tooltips, or when integrating with slicers and cross-filtering functionality across multiple report pages.",
      "histogram-chart": "Power BI histograms typically require custom visuals from AppSource, creating additional deployment and maintenance complexity. Users struggle with importing the right visual, configuring bin parameters, understanding data transformation requirements, and ensuring compatibility across different Power BI environments. The process becomes particularly challenging when dealing with large datasets, implementing statistical overlays, or when trying to maintain visual consistency across different report pages and shared dashboards."
    },
    "looker-studio": {
      "pie-chart": "Looker Studio pie charts require understanding of dimension vs. metric field types, data source connections, and the relationship between different chart properties. Users often struggle with data filtering, custom color palettes, slice sorting, and ensuring charts update properly when connected to dynamic data sources. The process becomes complex when implementing calculated fields or custom aggregations.",
      "donut-chart": "Creating donut charts in Looker Studio involves configuring pie chart properties and enabling donut mode, which isn't immediately obvious to new users. Users frequently encounter issues with hole size optimization, data label positioning around the circular layout, and maintaining visual consistency across different screen sizes and devices.",
      "stacked-bar-chart": "Stacked bar charts in Looker Studio require proper understanding of dimension hierarchies, metric calculations, and the interaction between different chart elements. Users often struggle with stack ordering, color assignment consistency, tooltip configuration, and ensuring proper responsiveness across different report formats and sharing methods.",
      "heat-map": "Heat maps in Looker Studio may require community visualizations or workarounds, making them less straightforward than basic chart types. Users struggle with color scale configuration, handling sparse data, grid formatting, and ensuring proper drill-down functionality. The complexity increases when trying to implement custom color rules or when dealing with large datasets that require aggregation.",
      "scatter-plot": "Looker Studio scatter plots require careful configuration of axis metrics, optional grouping dimensions, and bubble sizing parameters. Users frequently encounter issues with axis range optimization, point overlap when dealing with dense data, trend line configuration, and ensuring proper interactivity with other report elements and filters.",
      "line-chart": "Looker Studio line charts require understanding of date dimension configuration, metric aggregation, and time series formatting. Users often struggle with date range controls, missing data handling, multiple line comparisons, and ensuring proper chart responsiveness across devices. The complexity increases when implementing calculated fields, custom date periods, or when trying to synchronize multiple charts with shared filters and date controls.",
      "histogram-chart": "Looker Studio lacks native histogram support, forcing users to implement workarounds with column charts and manual data preprocessing. Users must handle bin creation outside the platform, manage frequency calculations manually, and struggle with achieving proper bar spacing and formatting. The complexity escalates when trying to implement statistical features, handle dynamic binning, or when ensuring the chart updates properly with filtered data, often requiring complex calculated fields and data transformation steps."
    },
    "excel": {
      "pie-chart": "While Excel pie charts appear straightforward, users often struggle with data preparation, proper range selection, and formatting. Common issues include manually calculating percentages, dealing with data labels that overlap or display incorrectly, and achieving professional color schemes. The process becomes complex when trying to create dynamic charts that update with changing data, requiring knowledge of Excel's table structures and named ranges.",
      "donut-chart": "Excel donut charts require creating a pie chart first, then manually adjusting the doughnut hole size through formatting options. Users frequently struggle with finding the Format Data Series dialog, setting appropriate hole sizes, and adding meaningful content to the center space. The complexity increases when trying to create multi-level donuts or when dealing with small categories that become hard to read.",
      "stacked-bar-chart": "Excel stacked bar charts require careful data arrangement with categories and series properly organized in columns. Users often struggle with data layout, especially when pivot tables are needed for complex data structures. Common issues include getting the stack order correct, managing colors across multiple series, formatting data labels to avoid overlap, and creating percentage-based stacked charts that require manual calculations or pivot table percentage options.",
      "heat-map": "Excel heatmaps typically rely on conditional formatting rather than true chart types, requiring users to understand cell formatting rules and color scales. Users struggle with setting up appropriate data ranges, choosing effective color gradients, and creating legends manually. The complexity increases significantly when trying to create dynamic heatmaps with changing data ranges, or when attempting 3D surface charts which require specific data matrix arrangements.",
      "scatter-plot": "Excel scatter plots require understanding of data series management, especially when plotting multiple groups or adding trend lines. Users often struggle with axis scaling, adding multiple data series with different formatting, configuring bubble sizes for bubble charts, and managing overlapping data points. The process becomes complex when trying to add error bars, statistical trend lines, or when dealing with large datasets that affect performance.",
      "line-chart": "Excel line charts seem simple but become complex with multiple data series, proper date formatting, and axis scaling. Users frequently struggle with date axis formatting, handling missing data points, managing multiple Y-axes with different scales, and creating smooth vs. straight line connections. The complexity grows when implementing secondary axes, custom markers, or when trying to create combination charts with bars and lines.",
      "histogram-chart": "Excel histograms require either the Analysis ToolPak (which many users don't have installed) or manual bin creation using FREQUENCY functions and helper columns. Users struggle with determining appropriate bin sizes, creating frequency calculations, formatting column charts to remove gaps, and adding proper axis labels. The process becomes significantly more complex when trying to overlay normal distribution curves, handle dynamic bin sizing, or work with large datasets that require data sampling."
    }
  },

  "blogBlocks": {
    "whyChartzBlocks": {
      "dataVisualization": {
        "title": "Why Businesses Choose Chartz for Data Visualization",
        "intro": "Traditional data visualization tools require extensive training, expensive licenses, and hours of manual work. Chartz transforms how businesses create visual insights with AI-powered simplicity.",
        "variations": [
          "Transform your data into stunning visualizations without the complexity of traditional tools like Tableau or Power BI.",
          "Create publication-ready charts and graphs in seconds, not hours, with our intelligent AI assistant.",
          "Skip the learning curve of complex visualization software and focus on insights, not tool mastery."
        ]
      },
      "dataAnalytics": {
        "title": "Why Businesses Choose Chartz for Data Analytics",
        "intro": "Data analytics shouldn't require a team of specialists or expensive enterprise software. Chartz democratizes data analysis with conversational AI that understands your business needs.",
        "variations": [
          "Unlock insights from your data without needing SQL expertise or statistical training.",
          "Ask questions about your data in plain English and get immediate, actionable insights.",
          "Transform raw data into strategic business intelligence without hiring data scientists."
        ]
      },
      "dashboardCreation": {
        "title": "Why Businesses Choose Chartz for Dashboard Creation",
        "intro": "Building effective dashboards traditionally requires design skills, technical knowledge, and ongoing maintenance. Chartz automates dashboard creation while maintaining professional quality.",
        "variations": [
          "Build interactive dashboards that actually drive business decisions, not just pretty displays.",
          "Create executive-ready dashboards without design expertise or technical complexity.",
          "Deploy real-time dashboards that update automatically as your data changes."
        ]
      }
    },
    "featureBlocks": {
      "zeroLearningCurve": {
        "icon": "🚀",
        "title": "Zero Learning Curve",
        "image": "/blog/images/welcome-to-chartz-ai.png",
        "imageAlt": "Chartz.ai welcome screen showing intuitive interface for getting started",
        "variations": [
          {
            "headline": "No Training Required",
            "description": "Start creating professional charts immediately. Our AI understands natural language, so you can describe what you want instead of learning complex software interfaces.",
            "benefits": ["Instant productivity", "No onboarding time", "Intuitive interactions"]
          },
          {
            "headline": "Speak Your Language, Not Code",
            "description": "Tell Chartz what you want to see: 'Show me sales trends by region' or 'Create a pie chart of customer segments.' No technical jargon or menu hunting required.",
            "benefits": ["Natural language queries", "No syntax to learn", "Immediate understanding"]
          },
          {
            "headline": "From Idea to Insight in Seconds",
            "description": "Whether you're a CEO, marketing manager, or analyst, Chartz adapts to your communication style and business vocabulary without requiring specialized training.",
            "benefits": ["Role-agnostic design", "Business-focused interface", "Contextual intelligence"]
          }
        ]
      },
      "aiQueriesData": {
        "icon": "🧠",
        "title": "AI Queries Your Data",
        "image": "/blog/images/sql.png",
        "imageAlt": "AI-powered SQL query interface showing natural language data querying",
        "variations": [
          {
            "headline": "Intelligent Data Discovery",
            "description": "Our AI automatically understands your data structure, identifies key patterns, and suggests the most relevant visualizations for your specific dataset.",
            "benefits": ["Automatic schema detection", "Pattern recognition", "Smart recommendations"]
          },
          {
            "headline": "Ask Questions, Get Answers",
            "description": "Query your data conversationally: 'Which products are declining?' or 'Show me our best performing regions.' The AI translates business questions into data insights.",
            "benefits": ["Natural language processing", "Business context awareness", "Immediate responses"]
          },
          {
            "headline": "Smart Data Relationships",
            "description": "Chartz AI identifies relationships between data points you might miss, suggesting correlations, trends, and anomalies that drive better business decisions.",
            "benefits": ["Relationship mapping", "Trend detection", "Anomaly identification"]
          }
        ]
      },
      "automaticChartBuilding": {
        "icon": "📊",
        "title": "Automatic Dynamic Chart Creation",
        "image": "/blog/images/dashboard.png",
        "imageAlt": "Dashboard showing automatically generated charts with professional styling",
        "variations": [
          {
            "headline": "Perfect Charts, Every Time",
            "description": "Our AI selects the optimal chart type, applies professional styling, and configures interactive features automatically based on your data and intent.",
            "benefits": ["Optimal chart selection", "Professional styling", "Interactive elements"]
          },
          {
            "headline": "Adaptive Visualizations",
            "description": "Charts automatically adjust to your data changes, maintaining clarity and readability whether you have 10 data points or 10,000.",
            "benefits": ["Automatic scaling", "Responsive design", "Performance optimization"]
          },
          {
            "headline": "Publication-Ready Results",
            "description": "Every chart is generated with publication-quality formatting, professional color schemes, and proper labeling - no manual tweaking required.",
            "benefits": ["Professional quality", "Consistent branding", "Export-ready formats"]
          }
        ]
      },
      "dateFiltering": {
        "icon": "📅",
        "title": "Intelligent Date Filtering",
        "image": "/blog/images/date-filter.png",
        "imageAlt": "Date filtering interface showing flexible time range selection options",
        "variations": [
          {
            "headline": "Time-Smart Analytics",
            "description": "Automatically detect date patterns in your data and enable intuitive time-based filtering: 'Show me last quarter' or 'Compare year-over-year trends.'",
            "benefits": ["Automatic date recognition", "Flexible time periods", "Trend analysis"]
          },
          {
            "headline": "Dynamic Time Ranges",
            "description": "Switch between time periods instantly - from daily granularity to yearly overviews - without rebuilding charts or losing context.",
            "benefits": ["Multi-granularity views", "Seamless transitions", "Context preservation"]
          },
          {
            "headline": "Comparative Time Analysis",
            "description": "Easily compare performance across different time periods, identify seasonal patterns, and track progress toward time-based goals.",
            "benefits": ["Period comparisons", "Seasonal analysis", "Goal tracking"]
          }
        ]
      },
      "multipleDataSources": {
        "icon": "🔗",
        "title": "Multiple Data Source Integration",
        "image": "/blog/images/data-source-dashboard.png",
        "imageAlt": "Data source selection interface showing various integration options",
        "variations": [
          {
            "headline": "Connect Everything",
            "description": "Seamlessly integrate data from databases, spreadsheets, APIs, and cloud services. Our AI handles the complexity of joining and normalizing different data formats.",
            "benefits": ["Universal connectivity", "Format normalization", "Automated joins"]
          },
          {
            "headline": "Real-Time Data Sync",
            "description": "Keep your visualizations current with live data connections that update automatically. Never work with stale data or manual exports again.",
            "benefits": ["Live connections", "Automatic updates", "Real-time insights"]
          },
          {
            "headline": "Enterprise-Grade Security",
            "description": "Connect to your sensitive data sources with confidence. Enterprise-level security, compliance, and access controls protect your information.",
            "benefits": ["Enterprise security", "Compliance ready", "Access control"]
          }
        ]
      }
    }
  },

  "customGuides": {
    "competitor-tutorial-template": {
      "sections": {
        "stepByStepGuide": {
          "default": "Creating a {chartTypeDisplay} in {competitorDisplay} is a multi-step process that can be overwhelming for beginners:\n\n### Step 1: Connect to Your Data Source\nFirst, you need to connect {competitorDisplay} to your data source:\n1. Open {competitorDisplay} {competitorType}\n2. Navigate to the data connection interface\n3. Choose your data source (Excel, CSV, database, etc.)\n4. Configure connection parameters\n5. Import or connect to your data\n\n### Step 2: Prepare Your Data\nBefore creating any visualization:\n1. Review data types and fix any issues\n2. Create calculated fields if necessary\n3. Handle missing or null values\n4. Ensure proper data relationships\n\n### Step 3: Create the {chartTypeDisplay}\n{competitorSteps}\n\n### Step 4: Format and Customize\nAfter creating the basic chart:\n1. Adjust colors, fonts, and sizing\n2. Add proper labels and titles\n3. Configure tooltips\n4. Set up filters and parameters\n5. Apply consistent formatting",
          "overrides": {
            "tableau": {
              "default": "**PLACEHOLDER: Custom Tableau guide for all chart types**\n\nThis will be replaced with comprehensive Tableau-specific instructions that cover the unique aspects of Tableau's interface and workflow.",
              "pie-chart": "**PLACEHOLDER: Custom Tableau pie chart guide**\n\nThis will contain detailed, step-by-step instructions specifically for creating pie charts in Tableau, including advanced formatting and best practices.",
              "donut-chart": "![Dataset example showing products with sales and costs](/blog/images/tableau/donut-chart/image.png)\n\nIn this example, we'll work with a small dataset containing three products, each with associated sales and costs. From these values, we can calculate the profit margin for each product.\n\nStart by creating a calculated field like this:\n\n```\nProfitMargin: (SUM([Sales]) - SUM([Cost])) / SUM([Cost])\n```\n\nNormally, when building pie or doughnut charts, you'd use a category field. Since our dataset doesn't include categories, we'll need a second calculated field to represent the remainder of the doughnut:\n\n```\nRestProfitMargin: 1 - [ProfitMargin]\n```\n\nIn a standard doughnut chart setup, place \"Measure Values\" on the Text mark and \"Measure Names\" on the Detail mark. Then, remove all measures except for ProfitMargin and RestProfitMargin. At this point, your view should resemble the following:\n\n![Tableau view with measures configured](/blog/images/tableau/donut-chart/image-1.png)\n\nNow select the Mark Type Pie.\n\n![Selecting pie mark type in Tableau](/blog/images/tableau/donut-chart/image-2.png)\n\n**And now you have your Pie Chart:**\n\n![Resulting pie chart in Tableau](/blog/images/tableau/donut-chart/image-3.png)\n\nTo convert the pie into a doughnut chart, add a measure to the **Rows** shelf. You can use **MIN(Number of Records)**, or simply a constant value. The key is that both row measures must return the same value.\n\n![Adding measure to Rows shelf](/blog/images/tableau/donut-chart/image-4.png)\n\nAt this stage, Tableau creates a **Multiple Mark Type** visualization. For the second mark, clear out the settings for **Color**, **Angle**, and **Label** on the Marks card. Then, adjust the **Size** property to make it a bit smaller. (Optionally, you can set the default color to white.)\n\n![Configuring multiple mark types](/blog/images/tableau/donut-chart/image-5.png)\n\nNext, right-click the second row measure and choose **Dual Axis**. And there you have it—a doughnut chart. From here, you can tidy things up by adjusting labels, hiding headers, and formatting your measures as needed.\n\n![Final donut chart with dual axis](/blog/images/tableau/donut-chart/image-6.png)"
            },
            "looker-studio": {
              "default": "**PLACEHOLDER: Custom Looker Studio guide for all chart types**\n\nThis will contain Google Looker Studio-specific instructions that reflect its cloud-based interface and Google ecosystem integration."
            }
          }
        }
      }
    }
  }
}